#16x16 matrices
.data
aMatrix: .word 
3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0   
0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3
bMatrix: .word
1 2 3 4 5 0 0 0 0 0 0 0 0 0 0 0
2 3 4 5 6 0 0 0 0 0 0 0 0 0 0 0
3 4 5 6 7 0 0 0 0 0 0 0 0 0 0 0
4 5 6 7 8 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
paddding: .word 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
cMatrix: .word 
1 2 3 4 5 0 0 0 0 0 0 0 0 0 0 0
2 3 4 5 6 0 0 0 0 0 0 0 0 0 0 0
3 4 5 6 7 0 0 0 0 0 0 0 0 0 0 0
4 5 6 7 8 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
# [[[1, 2] dot [3, 7], [1, 2] dot [5, 11]], [[3, 4] dot [3, 7], [3, 4] dot [5, 11]]] 
expected: .word
3 6 9 12 15 0 0 0 0 0 0 0 0 0 0 0
6 9 12 15 18 0 0 0 0 0 0 0 0 0 0 0
9 12 15 18 21 0 0 0 0 0 0 0 0 0 0 0
12 15 18 21 24 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

.text
.globl main
main:
la $a0, aMatrix # 2z2 matrix A
la $a1, bMatrix # 2x2 matrix B
la $a2, cMatrix # 2x2 matrix C (result)
addi $a3, $0, 16 # N = 2
jal NMM # call NMM(&a, &b, &c, 2)
#CHECK IF IT WORKED!
la $t0, cMatrix # Destination 
la $t1, expected # Expected
addi $t2, $0, 256 # N * N = 4
addi $t3, $0, 0 # error count = 0
loopcheck:
lw $t4, 0($t0) # item from C 
lw $t5, 0($t1) # item from expected
addi $t0, $t0, 4
addi $t1, $t1, 4
xor $t4, $t5, $t4
beq $t4, $0, skip
addi $t3, $t3, 1
skip:addi $t2, $t2, -1
bne $t2, $0, loopcheck
addi $v0, $0, 1
add $a0, $0, $t3 # move error count
syscall # print error count
addi $v0, $0, 10
syscall # exit
nop
nop
nop
nop
nop